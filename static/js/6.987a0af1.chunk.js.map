{"version":3,"sources":["components/Header/Header.jsx","components/SearchBar/SearchBar.jsx","pages/AddressBook/AddressBook.jsx"],"names":["Header","content","connect","dispatch","searchFieldChange","data","useState","searchTerm","setSearchTerm","debouncedSearchTerm","_","debounce","useEffect","Search","open","onSearchChange","e","target","value","ContactTable","lazy","pageNumber","contactListReducer","page","fetchContactList","Fragment","className","fallback"],"mappings":"0IAAA,2BAUeA,IARA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,OACE,gCACE,4BAAKA,M,uJC8BIC,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,kBAAmB,SAACC,GAAD,OAAUF,EAASC,YAAkBC,QAG3CH,EA7BG,SAAC,GAA2B,IAAzBE,EAAwB,EAAxBA,kBAAwB,EACPE,mBAAS,IADF,mBACpCC,EADoC,KACxBC,EADwB,KAOrCC,EAAsBC,IAAEC,SAASH,EAAe,KAQtD,OANAI,qBAAU,WACJH,GACFL,EAAkBG,KAEnB,CAACE,EAAqBL,IAGvB,6BACE,kBAACS,EAAA,EAAD,CACEC,MAAM,EACNC,eAAgB,SAACC,GAAD,OAAOP,EAAoBO,EAAEC,OAAOC,cChBtDC,EAAeC,gBAAK,kBAAM,iCAkCjBlB,uBARS,SAAC,GAAD,MAAuC,CAC7DmB,WADsB,EAAGC,mBAAsBC,SAItB,SAACpB,GAAD,MAAe,CACxCqB,iBAAkB,kBAAMrB,EAASqB,mBAGpBtB,EAhCK,SAAC,GAAsC,IAApCsB,EAAmC,EAAnCA,iBAAkBH,EAAiB,EAAjBA,WASvC,OARAT,qBAAU,WAMRY,EAAiBH,KAChB,CAACG,EAAkBH,IAEpB,kBAAC,IAAMI,SAAP,KACE,kBAACzB,EAAA,EAAD,CAAQC,QAAO,iBACf,yBAAKyB,UAAU,QACb,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAClB,kBAAC,EAAD,MACA,uFACA,6DACA,kBAACR,EAAD","file":"static/js/6.987a0af1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.scss\";\nconst Header = ({ content }) => {\n  return (\n    <header>\n      <h1>{content}</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { Search } from \"semantic-ui-react\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { searchFieldChange } from \"../../redux/actions\";\n\nconst SearchBar = ({ searchFieldChange }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  /**\n   * debouncing to reduce requests when user types fase\n   */\n\n  const debouncedSearchTerm = _.debounce(setSearchTerm, 200);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      searchFieldChange(searchTerm);\n    }\n  }, [debouncedSearchTerm, searchFieldChange]);\n\n  return (\n    <div>\n      <Search\n        open={false}\n        onSearchChange={(e) => debouncedSearchTerm(e.target.value)}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  searchFieldChange: (data) => dispatch(searchFieldChange(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n","import React, { useEffect, lazy, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchContactList } from \"../../redux/actions\";\nimport Spinner from \"../../components/spinner/spinner.component\";\nimport Header from \"../../components/Header/Header\";\nimport SearchBar from \"../../components/SearchBar/SearchBar\";\n/**\n * code spliting contactTable so that spinner is enabled to improve loading and UX\n */\nconst ContactTable = lazy(() => import(\"../../components/table/contactTable\"));\n\nconst AddressBook = ({ fetchContactList, pageNumber }) => {\n  useEffect(() => {\n    /**\n     * fetch data with page number\n     * whenever page number is updated fetch is run automatically\n     * we run useEffect for every pagenumber updation\n     */\n    fetchContactList(pageNumber);\n  }, [fetchContactList, pageNumber]);\n  return (\n    <React.Fragment>\n      <Header content={`Address Book`} />\n      <div className=\"main\">\n        <Suspense fallback={<Spinner />}>\n          <SearchBar />\n          <h4>New data will not be fetched if search field has values</h4>\n          <h3>Click on name to view details</h3>\n          <ContactTable />\n        </Suspense>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({ contactListReducer: { page } }) => ({\n  pageNumber: page,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContactList: () => dispatch(fetchContactList()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddressBook);\n"],"sourceRoot":""}